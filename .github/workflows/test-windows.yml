name: Test Windows Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-windows:
    name: Test Windows Build
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Download Premake5
      run: |
        echo "Downloading premake5..."
        if (!(Test-Path "Vendor\Premake")) {
          New-Item -ItemType Directory -Path "Vendor\Premake" -Force
        }
        
        $premakeUrl = "https://github.com/premake/premake-core/releases/download/v5.0.0-alpha16/premake-5.0.0-alpha16-windows.zip"
        $premakeZip = "Vendor\Premake\premake5.zip"
        $premakeDir = "Vendor\Premake"
        
        Invoke-WebRequest -Uri $premakeUrl -OutFile $premakeZip
        Expand-Archive -Path $premakeZip -DestinationPath $premakeDir -Force
        Remove-Item $premakeZip
        
        echo "Premake5 downloaded and extracted"
        Vendor\Premake\premake5.exe --version
      
    - name: Generate Visual Studio solution
      run: |
        echo "Generating Visual Studio solution..."
        Vendor\Premake\premake5.exe vs2022
        if ($LASTEXITCODE -ne 0) {
          echo "Error: Failed to generate Visual Studio solution"
          exit 1
        }
        
        echo "Generated files:"
        Get-ChildItem -Name "*.sln"
        
    - name: Build project
      run: |
        echo "Building with detailed output..."
        msbuild LimitlessRemaster.sln /p:Configuration=Debug /p:Platform=x64 /m /v:detailed /p:BuildProjectReferences=true
        
        if ($LASTEXITCODE -ne 0) {
          echo "Error: Build failed with exit code $LASTEXITCODE"
          exit $LASTEXITCODE
        }
        
        echo "Build completed successfully!"
        
    - name: List build output
      run: |
        echo "Build directory contents:"
        if (Test-Path "Build") {
          Get-ChildItem Build -Recurse | Format-Table Name, FullName
        } else {
          echo "Build directory not found!"
          exit 1
        }
        
    - name: Run tests
      run: |
        $testExe = "Build\Debug-windows-x64\Test\Test.exe"
        if (Test-Path $testExe) {
          echo "Running tests..."
          & $testExe --success
          if ($LASTEXITCODE -ne 0) {
            echo "Warning: Some tests failed"
          } else {
            echo "All tests passed!"
          }
        } else {
          echo "Test executable not found at: $testExe"
          echo "Available executables:"
          Get-ChildItem Build -Recurse -Name "*.exe"
        }
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: windows-build-artifacts
        path: |
          Build/
          *.sln
        retention-days: 7 