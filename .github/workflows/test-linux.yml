name: Test Linux Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-linux:
    name: Test Linux Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential g++ make cmake pkg-config
        sudo apt-get install -y libasound2-dev libpulse-dev libaudio-dev libjack-dev
        sudo apt-get install -y libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev libxxf86vm-dev libxss-dev
        sudo apt-get install -y libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev
        sudo apt-get install -y libdbus-1-dev libudev-dev libibus-1.0-dev
        sudo apt-get install -y libdrm-dev libgbm-dev
        sudo apt-get install -y libwayland-dev libxkbcommon-dev
        
    - name: Install SDL3
      run: |
        echo "Installing SDL3..."
        # Try to install SDL3 from package manager first
        if sudo apt-get install -y libsdl3-dev 2>/dev/null; then
          echo "SDL3 installed from package manager"
        else
          echo "Building SDL3 from source..."
          cd /tmp
          git clone https://github.com/libsdl-org/SDL.git
          cd SDL
          git checkout release-3.2.18
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DSDL_STATIC=OFF -DSDL_SHARED=ON -DSDL_TEST=OFF
          make -j$(nproc)
          sudo make install
          sudo ldconfig
        fi
        
        echo "SDL3 installation info:"
        pkg-config --modversion sdl3 || echo "SDL3 not found by pkg-config"
        
    - name: Download premake5
      run: |
        echo "Downloading premake5..."
        curl -L -o premake5.tar.gz https://github.com/premake/premake-core/releases/download/v5.0.0-alpha16/premake-5.0.0-alpha16-linux.tar.gz
        tar -xzf premake5.tar.gz
        chmod +x premake5
        
        echo "Premake5 version:"
        ./premake5 --version
        
    - name: Generate Makefiles
      run: |
        echo "Generating Makefiles..."
        ./premake5 gmake2
        
        if [ ! -f "Makefile" ]; then
          echo "Error: Makefile was not generated"
          exit 1
        fi
        
        echo "Makefile generated successfully"
        
    - name: Build project
      run: |
        echo "Building project..."
        make -j$(nproc) config=debug_x64
        
        if [ $? -ne 0 ]; then
          echo "Error: Build failed"
          exit 1
        fi
        
        echo "Build completed successfully!"
        
    - name: List build output
      run: |
        echo "Build directory contents:"
        ls -la Build/ || echo "Build directory not found"
        
    - name: Run tests
      run: |
        TEST_EXE=$(find Build/ -name "Test" -type f 2>/dev/null | head -1)
        if [ -n "$TEST_EXE" ]; then
          echo "Running tests..."
          "$TEST_EXE" --success
          if [ $? -ne 0 ]; then
            echo "Warning: Some tests failed"
          else
            echo "All tests passed!"
          fi
        else
          echo "Test executable not found"
          find Build/ -name "*Test*" -type f 2>/dev/null || echo "No test files found"
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: linux-build-artifacts
        path: |
          Build/
          Makefile
        retention-days: 7 